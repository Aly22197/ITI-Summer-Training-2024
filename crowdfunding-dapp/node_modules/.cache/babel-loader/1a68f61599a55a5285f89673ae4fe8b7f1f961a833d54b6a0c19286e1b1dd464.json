{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aly\\\\Desktop\\\\Crowdfunding\\\\crowdfunding\\\\crowdfunding-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers, parseEther, formatEther } from 'ethers';\nimport { contractAbi } from './Constant/constant.js';\nimport { contractAddress } from './Constant/constant.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  useEffect(() => {\n    let isInitializing = false;\n    const init = async () => {\n      if (isInitializing) return;\n      isInitializing = true;\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        console.error(\"MetaMask is not installed\");\n        isInitializing = false;\n        return;\n      }\n      try {\n        await ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.BrowserProvider(ethereum);\n        const signer = await provider.getSigner(); // Notice the `await`\n        const contract = new ethers.Contract(contractAddress, contractAbi, signer);\n        setProvider(provider);\n        setSigner(signer);\n        setContract(contract);\n        setAccount(signer.address); // Access `signer.address` directly instead of using `getAddress()`\n      } catch (error) {\n        if (error.code === 4001) {\n          console.error(\"User rejected the request.\");\n        } else {\n          console.error('Error initializing Ethereum connection:', error);\n        }\n      } finally {\n        isInitializing = false;\n      }\n    };\n    init();\n  }, []);\n  const createPost = async (goalAmount, minContribution) => {\n    if (!contract) return;\n    try {\n      const tx = await contract.createPost(parseEther(goalAmount), parseEther(minContribution));\n      await tx.wait();\n      console.log('Post created successfully!');\n    } catch (err) {\n      console.error('Error creating post:', err);\n    }\n  };\n  const fundPost = async (postId, amount) => {\n    if (!contract) return;\n    try {\n      const tx = await contract.fundPost(postId, {\n        value: parseEther(amount)\n      });\n      await tx.wait();\n      console.log('Funded post successfully!');\n    } catch (err) {\n      console.error('Error funding post:', err);\n    }\n  };\n  const getCollectedFunds = async postId => {\n    if (!contract) return;\n    try {\n      const collectedFunds = await contract.getCollectedFunds(postId);\n      console.log(`Collected funds: ${formatEther(collectedFunds)} ETH`);\n    } catch (err) {\n      console.error('Error getting collected funds:', err);\n    }\n  };\n  const [goalAmount, setGoalAmount] = useState('');\n  const [minContribution, setMinContribution] = useState('');\n  const [postId, setPostId] = useState('');\n  const [fundAmount, setFundAmount] = useState('');\n  const handleCreatePost = e => {\n    e.preventDefault();\n    createPost(goalAmount, minContribution);\n  };\n  const handleFundPost = e => {\n    e.preventDefault();\n    fundPost(postId, fundAmount);\n  };\n  const handleGetCollectedFunds = e => {\n    e.preventDefault();\n    getCollectedFunds(postId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crowdfunding DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Goal Amount (ETH)\",\n        value: goalAmount,\n        onChange: e => setGoalAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Minimum Contribution (ETH)\",\n        value: minContribution,\n        onChange: e => setMinContribution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFundPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Post ID\",\n        value: postId,\n        onChange: e => setPostId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Fund Amount (ETH)\",\n        value: fundAmount,\n        onChange: e => setFundAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Fund Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleGetCollectedFunds,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Post ID\",\n        value: postId,\n        onChange: e => setPostId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Collected Funds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5uYKyar9dUOxVOYXlF/iujdM4xE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","parseEther","formatEther","contractAbi","contractAddress","jsxDEV","_jsxDEV","App","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","isInitializing","init","ethereum","window","console","error","request","method","BrowserProvider","getSigner","Contract","address","code","createPost","goalAmount","minContribution","tx","wait","log","err","fundPost","postId","amount","value","getCollectedFunds","collectedFunds","setGoalAmount","setMinContribution","setPostId","fundAmount","setFundAmount","handleCreatePost","e","preventDefault","handleFundPost","handleGetCollectedFunds","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Aly/Desktop/Crowdfunding/crowdfunding/crowdfunding-dapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers, parseEther, formatEther } from 'ethers';\nimport { contractAbi } from './Constant/constant.js';\nimport { contractAddress } from './Constant/constant.js';\n\nfunction App() {\n    const [provider, setProvider] = useState(null);\n    const [signer, setSigner] = useState(null);\n    const [contract, setContract] = useState(null);\n    const [account, setAccount] = useState(null);\n\n    useEffect(() => {\n        let isInitializing = false;\n    \n        const init = async () => {\n            if (isInitializing) return;\n            isInitializing = true;\n    \n            const { ethereum } = window;\n    \n            if (!ethereum) {\n                console.error(\"MetaMask is not installed\");\n                isInitializing = false;\n                return;\n            }\n    \n            try {\n                await ethereum.request({ method: 'eth_requestAccounts' });\n    \n                const provider = new ethers.BrowserProvider(ethereum);\n                const signer = await provider.getSigner(); // Notice the `await`\n                const contract = new ethers.Contract(contractAddress, contractAbi, signer);\n    \n                setProvider(provider);\n                setSigner(signer);\n                setContract(contract);\n                setAccount(signer.address);  // Access `signer.address` directly instead of using `getAddress()`\n            } catch (error) {\n                if (error.code === 4001) {\n                    console.error(\"User rejected the request.\");\n                } else {\n                    console.error('Error initializing Ethereum connection:', error);\n                }\n            } finally {\n                isInitializing = false;\n            }\n        };\n    \n        init();\n    }, []);\n    \n\n    const createPost = async (goalAmount, minContribution) => {\n        if (!contract) return;\n\n        try {\n            const tx = await contract.createPost(\n                parseEther(goalAmount),\n                parseEther(minContribution)\n            );\n            await tx.wait();\n            console.log('Post created successfully!');\n        } catch (err) {\n            console.error('Error creating post:', err);\n        }\n    };\n\n    const fundPost = async (postId, amount) => {\n        if (!contract) return;\n\n        try {\n            const tx = await contract.fundPost(postId, {\n                value: parseEther(amount),\n            });\n            await tx.wait();\n            console.log('Funded post successfully!');\n        } catch (err) {\n            console.error('Error funding post:', err);\n        }\n    };\n\n    const getCollectedFunds = async (postId) => {\n        if (!contract) return;\n\n        try {\n            const collectedFunds = await contract.getCollectedFunds(postId);\n            console.log(`Collected funds: ${formatEther(collectedFunds)} ETH`);\n        } catch (err) {\n            console.error('Error getting collected funds:', err);\n        }\n    };\n\n    const [goalAmount, setGoalAmount] = useState('');\n    const [minContribution, setMinContribution] = useState('');\n    const [postId, setPostId] = useState('');\n    const [fundAmount, setFundAmount] = useState('');\n\n    const handleCreatePost = (e) => {\n        e.preventDefault();\n        createPost(goalAmount, minContribution);\n    };\n\n    const handleFundPost = (e) => {\n        e.preventDefault();\n        fundPost(postId, fundAmount);\n    };\n\n    const handleGetCollectedFunds = (e) => {\n        e.preventDefault();\n        getCollectedFunds(postId);\n    };\n\n    return (\n        <div>\n            <h1>Crowdfunding DApp</h1>\n            <p>Connected account: {account}</p>\n\n            <form onSubmit={handleCreatePost}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Goal Amount (ETH)\"\n                    value={goalAmount}\n                    onChange={(e) => setGoalAmount(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Minimum Contribution (ETH)\"\n                    value={minContribution}\n                    onChange={(e) => setMinContribution(e.target.value)}\n                />\n                <button type=\"submit\">Create Post</button>\n            </form>\n\n            <form onSubmit={handleFundPost}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Post ID\"\n                    value={postId}\n                    onChange={(e) => setPostId(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Fund Amount (ETH)\"\n                    value={fundAmount}\n                    onChange={(e) => setFundAmount(e.target.value)}\n                />\n                <button type=\"submit\">Fund Post</button>\n            </form>\n\n            <form onSubmit={handleGetCollectedFunds}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Post ID\"\n                    value={postId}\n                    onChange={(e) => setPostId(e.target.value)}\n                />\n                <button type=\"submit\">Get Collected Funds</button>\n            </form>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}